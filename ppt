Introduction
- what are we doing in this project? (README)
- why are we solving this problem?(some data of accidents, if lane line warning system is not installed in their vechile?)

ideas/Questions
- some questions we had before solving this problem? (README)
- what methods are there to solve this problem? (Various methods, but we maily going to talk about Hough Transform Method & sliding window polynomial fitting)

Algorithm - 1
* Hough Transform Method (https://sci-hub.mksa.top/10.1109/ICCCE.2008.4580573)
- explain Hough Transform.

* image pre. techniques (IMP: White lanes only) 

A. Dataset explained
- All the images in our dataset is 540x960 RGB images.
- For dash cam footage we are capturing each frame per second & applying our algorithm pipeline to each image frame.

B. Converting image to grayscale
- In our dataset, the color of surface of the road was changing from one region to another due to factors such as: shadows,
diff age or style of the road.
- To remove this problem we coverted the images to grayscale first, meaning converting 24bit, 3 channel color image to
8bit , 1 channel image.
- Further in this algorithm, this technique helped us, when we were detecting edges in the images in much more less time.
- The Technique reduced the preprocessing time of the images.

C. Noise reduction
- Applied Guassian Blur.
- Noise in our image will impact our edge detection.
- TODO: cv2.GussianBlur()

D. edge detection
- ED is applied to extract lane lines boundaries from the image.
- There were many edge detection algorithms such as Roberts, Prewitt, Sobel, Canny.
- We choose Canny edge detecton.
- TODO: Sobel, Roberts, Prewitt. ED images

* image pre. techniques (IMP: Yellow lanes  & much more advance) 
TODO: https://sci-hub.mksa.top/10.1109/AEECA49918.2020.9213624

* Region of interest (ROI)

* Hough Lines

* merge

* math

* result












